name: Publish
on:
  release:
    types: [published]

jobs:
  publish:
    strategy:
      matrix:
        config:
          - { os: ubuntu-latest, preset: linuxX64, task: publishAllPublicationsToSonatypeRepository }
          - { os: macos-latest, preset: macosX64, task: publishMacosX64PublicationToSonatypeRepository }
          - { os: windows-latest, preset: mingwX64, task: publishMingwX64PublicationToSonatypeRepository }
    name: Publish for ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v2
      - id: to_version
        uses: actions/github-script@0.9.0
        with:
          result-encoding: string
          script: |
            return '${{ github.event.release.tag_name }}'.replace(/^v/, '');
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: eskatos/gradle-command-action@v1
        with:
          arguments: -s generateNativeClasses ${{ matrix.config.task }} closeAndReleaseSonatypeStagingRepository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx2g
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/distributions/${{ matrix.config.preset }}-${{ steps.to_version.outputs.result }}.zip
          asset_name: agent-${{ matrix.config.preset }}-${{ steps.to_version.outputs.result }}.zip
          asset_content_type: application/zip
      - uses: eskatos/gradle-command-action@v1
        if: ${{ matrix.config.preset == 'linuxX64' }}
        with:
          arguments: -s install${{ matrix.config.preset }}
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx2g
      - uses: docker/build-push-action@v1
        if: ${{ matrix.config.preset == 'linuxX64' }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: drill4j/java-agent
          tags: ${{ steps.to_version.outputs.result }},latest
